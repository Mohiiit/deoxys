name: Starknet-js Compatibility Tests

on:
  workflow_dispatch:
  workflow_call:

jobs:
  js-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Restore Madara binary
        uses: actions/cache@v3
        with:
          path: target/release/madara
          key: ${{ runner.os }}-madara-${{ github.sha }}
          fail-on-cache-miss: true
      - name: Restore Cairo build artifacts
        uses: actions/cache@v3
        with:
          path: cairo/target
          key: ${{ runner.os }}-cairo-${{ github.sha }}
          fail-on-cache-miss: true
      - name: Setup and run dev chain
        run: |
          ./target/release/madara --name madara --base-path ../madara3 --network devnet --authority --telemetry-disabled --rpc-port 9944 --rpc-cors "*" --rpc-external --devnet --preset test &
          MADARA_PID=$!
          
          # Wait for Madara to initialize (increase timeout if needed)
          for i in {1..30}; do
            if curl -s -H "Content-Type: application/json" -d '{"jsonrpc":"2.0","method":"starknet_chainId","params":[],"id":1}' http://localhost:9944; then
              echo "Madara is ready"
              break
            fi
            if [ $i -eq 30 ]; then
              echo "Timeout waiting for Madara to start"
              exit 1
            fi
            sleep 2
          done
          
          cd js_tests
          npm install
          npm test || { echo "Tests failed"; kill $MADARA_PID; exit 1; }
          kill $MADARA_PID
      - name: Debug info
        if: failure()
        run: |
          echo "Madara logs:"
          cat ../madara3/madara.log
          echo "Network status:"
          netstat -tuln
          echo "Process list:"
          ps aux | grep madara
